{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","setInterval","setState","console","log","this","clearInterval","userFullName","props","user","name","title","first","last","React","Component","App","isClockVisible","undefined","hideClock","showClock","changingUser","oldUser","newUser","getUser","setTimeout","a","fetch","then","resp","json","results","className","type","onClick","src","picture","large","alt","ReactDOM","render","document","getElementById"],"mappings":"6OAYaA,EAAb,4MACEC,MAEI,CACFC,MAAO,IAAIC,MAAQC,sBAJvB,EAOEC,QAA0BC,aAAY,WACpC,EAAKC,SAAS,CAAEL,MAAO,IAAIC,MAAQC,uBACnCI,QAAQC,IAAI,EAAKR,MAAMC,QACtB,KAVL,uDAYE,WACE,OAAOQ,KAAKL,UAbhB,kCAgBE,WACEM,cAAcD,KAAKL,WAjBvB,oBAoBE,WACE,IAAIO,EAAe,aAEnB,GAAIF,KAAKG,MAAMC,KAAM,CACnB,MAA+BJ,KAAKG,MAAMC,KAAKC,KAAvCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAEtBN,EAAY,UAAMI,EAAN,aAAgBC,EAAhB,YAAyBC,GAGvC,OACE,qCACE,+BACGR,KAAKT,MAAMC,OAEd,uBACA,+BACIU,WApCZ,GAA2BO,IAAMC,WCN3BC,E,4MACJpB,MAGI,CACFqB,gBAAgB,EAChBR,UAAMS,G,EAORC,UAAY,WACV,EAAKjB,SAAS,CAAEe,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKlB,SAAS,CAAEe,gBAAgB,K,EAGlCI,aAAe,WACb,IAAIC,EAAU,2CACVC,EAAU,iCAEd,GAAI,EAAK3B,MAAMa,KAAM,CACnB,MAA+B,EAAKb,MAAMa,KAAKC,KAAvCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAEtBS,EAAO,UAAMX,EAAN,aAAgBC,EAAhB,YAAyBC,GAGlC,EAAKW,UAELC,YAAW,WACT,GAAI,EAAK7B,MAAMa,KAAM,CACnB,MAA+B,EAAKb,MAAMa,KAAKC,KAAvCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAEtBU,EAAO,UAAMZ,EAAN,aAAgBC,EAAhB,YAAyBC,GAGlCV,QAAQC,IAAR,0CACqCkB,EADrC,eACmDC,MAElD,M,EAGLC,Q,sBAAU,sBAAAE,EAAA,sEACFC,MAAM,6BACTC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACL,EAAK3B,SAAS,CACZO,KAAMoB,EAAKE,QAAQ,QALjB,2C,uDArCV,WACE1B,KAAKmB,Y,oBA8CP,WACE,MAAiCnB,KAAKT,MAA9BqB,EAAR,EAAQA,eAAgBR,EAAxB,EAAwBA,KAExB,OACE,sBAAKuB,UAAU,MAAf,UACE,6CACA,8CAEG,IACAf,GACI,cAAC,EAAD,CAAOR,KAAMA,OAEpB,wBAAQwB,KAAK,SAASC,QAAS7B,KAAKe,UAApC,wBAGA,wBAAQa,KAAK,SAASC,QAAS7B,KAAKc,UAApC,wBAGA,wBAAQc,KAAK,SAASC,QAAS7B,KAAKgB,aAApC,yBAGChB,KAAKT,MAAMa,MAEV,8BACE,qBACE0B,IAAG,UAAK9B,KAAKT,MAAMa,KAAK2B,QAAQC,OAChCC,IAAG,UAAKjC,KAAKT,MAAMa,KAAKC,KAAKE,kB,GAlFzBE,IAAMC,WA2FTC,IC9FfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.174edb37.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User | undefined;\n};\n\ntype States = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, States> {\n  state: {\n    date: string,\n  } = {\n    date: (new Date()).toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timeout = setInterval(() => {\n    this.setState({ date: (new Date()).toLocaleTimeString() });\n    console.log(this.state.date);\n  }, 1000);\n\n  componentDidMount() {\n    return this.timerId;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    let userFullName = 'Loading...';\n\n    if (this.props.user) {\n      const { title, first, last } = this.props.user.name;\n\n      userFullName = `${title}. ${first} ${last}`;\n    }\n\n    return (\n      <>\n        <span>\n          {this.state.date}\n        </span>\n        <br />\n        <span>\n          { userFullName }\n        </span>\n      </>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\nimport { User } from './types';\n\nclass App extends React.Component {\n  state: {\n    isClockVisible: boolean,\n    user: User | undefined,\n  } = {\n    isClockVisible: true,\n    user: undefined,\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  changingUser = () => {\n    let oldUser = '(there was no name for this user yet...)';\n    let newUser = '(new user name is loading....)';\n\n    if (this.state.user) {\n      const { title, first, last } = this.state.user.name;\n\n      oldUser = `${title}. ${first} ${last}`;\n    }\n\n    this.getUser();\n\n    setTimeout(() => {\n      if (this.state.user) {\n        const { title, first, last } = this.state.user.name;\n\n        newUser = `${title}. ${first} ${last}`;\n      }\n\n      console.log(\n        `then user name was changed from ${oldUser} to ${newUser}`,\n      );\n    }, 800);\n  };\n\n  getUser = async (): Promise<any> => {\n    await fetch('https://randomuser.me/api')\n      .then((resp) => resp.json())\n      .then((resp) => {\n        this.setState({\n          user: resp.results[0],\n        });\n      });\n  };\n\n  render(): React.ReactNode {\n    const { isClockVisible, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible\n            && <Clock user={user} />}\n        </p>\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n        <button type=\"button\" onClick={this.changingUser}>\n          Change user\n        </button>\n        {this.state.user\n        && (\n          <div>\n            <img\n              src={`${this.state.user.picture.large}`}\n              alt={`${this.state.user.name.first}`}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}