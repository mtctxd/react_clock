{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","user","undefined","timerId","setInterval","setState","console","log","getUser","a","fetch","then","resp","json","results","this","clearInterval","userFullName","name","title","first","last","React","Component","App","isClockVisible","shouldChangeName","hideClock","showClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6OAaaA,EAAb,4MACEC,MAGI,CACFC,MAAO,IAAIC,MAAQC,qBACnBC,UAAMC,GANV,EASEC,QAA0BC,aAAY,WACpC,EAAKC,SAAS,CAAEP,MAAO,IAAIC,MAAQC,uBACnCM,QAAQC,IAAI,EAAKV,MAAMC,QACtB,KAZL,EAwBEU,QAxBF,sBAwBY,sBAAAC,EAAA,sEACFC,MAAM,6BACTC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACL,EAAKP,SAAS,CACZJ,KAAMW,EAAKE,QAAQ,QALjB,2CAxBZ,uDAcE,WAGE,OAFAC,KAAKP,UAEEO,KAAKZ,UAjBhB,kCAoBE,WACEa,cAAcD,KAAKZ,WArBvB,oBAkCE,WACE,IAAIc,EAAe,aAEnB,GAAIF,KAAKlB,MAAMI,KAAM,CACnB,MAA+Bc,KAAKlB,MAAMI,KAAKiB,KAAvCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAEtBJ,EAAY,UAAME,EAAN,aAAgBC,EAAhB,YAAyBC,GAGvC,OACE,qCACE,+BACGN,KAAKlB,MAAMC,OAEd,uBACA,+BACImB,WAlDZ,GAA2BK,IAAMC,WCT3BC,E,4MACJ3B,MAAQ,CACN4B,gBAAgB,EAChBC,kBAAkB,G,EAGpBC,UAAY,WACV,EAAKtB,SAAS,CAAEoB,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKvB,SAAS,CAAEoB,gBAAgB,K,4CAGlC,WACE,MAA6CV,KAAKlB,MAA1C4B,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,iBAExB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACA,8CAEG,IACAJ,GACI,cAAC,EAAD,CAAOC,iBAAkBA,OAEhC,wBAAQI,KAAK,SAASC,QAAShB,KAAKa,UAApC,wBAGA,wBAAQE,KAAK,SAASC,QAAShB,KAAKY,UAApC,+B,GA7BUL,IAAMC,WAqCTC,ICtCfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.936355b4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { User } from '../../types';\n\ntype ClockProps = {\n  shouldChangeName: boolean;\n};\n\ntype ClockStates = {\n  date: string;\n  user: User | undefined;\n};\n\nexport class Clock extends React.Component<ClockProps, ClockStates> {\n  state: {\n    date: string,\n    user: User | undefined,\n  } = {\n    date: (new Date()).toLocaleTimeString(),\n    user: undefined,\n  };\n\n  timerId: NodeJS.Timeout = setInterval(() => {\n    this.setState({ date: (new Date()).toLocaleTimeString() });\n    console.log(this.state.date);\n  }, 1000);\n\n  componentDidMount() {\n    this.getUser();\n\n    return this.timerId;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  getUser = async (): Promise<any> => {\n    await fetch('https://randomuser.me/api')\n      .then((resp) => resp.json())\n      .then((resp) => {\n        this.setState({\n          user: resp.results[0],\n        });\n      });\n  };\n\n  render(): React.ReactNode {\n    let userFullName = 'Loading...';\n\n    if (this.state.user) {\n      const { title, first, last } = this.state.user.name;\n\n      userFullName = `${title}. ${first} ${last}`;\n    }\n\n    return (\n      <>\n        <span>\n          {this.state.date}\n        </span>\n        <br />\n        <span>\n          { userFullName }\n        </span>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    shouldChangeName: false,\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  render(): React.ReactNode {\n    const { isClockVisible, shouldChangeName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible\n            && <Clock shouldChangeName={shouldChangeName} />}\n        </p>\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}